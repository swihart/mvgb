% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmvlaplace.R
\name{pmvlaplace}
\alias{pmvlaplace}
\title{Multivariate Laplace Distribution Probabilities (via exponential variates)}
\usage{
pmvlaplace(x, n, lower, upper, infin, corr, corrF, delta)
}
\arguments{
\item{x}{NULL these are hardcoded for the moment}

\item{n}{the dimension.  Bivariate would be n=2, trivariate n=3, etc.}

\item{lower}{lower bounds of integration must be length n, finite}

\item{upper}{upper bounds of integration must be length n, finite}

\item{infin}{for finite intervals, must be vector length n every element 2}

\item{corr}{correlation}

\item{corrF}{correlationF}

\item{delta}{Not implemented yet.  Delta for MVTDST is something different than mu for laplace}
}
\value{
Returns the variables from the MVTDST function (QRVSN algorithm):\preformatted{N      INTEGER, the number of variables.

NU     INTEGER, the number of degrees of freedom.
       If NU < 1, then an MVN probability is computed.

LOWER  DOUBLE PRECISION, array of lower integration limits.

UPPER  DOUBLE PRECISION, array of upper integration limits.

INFIN  INTEGER, array of integration limits flags:
        if INFIN(I) < 0, Ith limits are (-infinity, infinity);
        if INFIN(I) = 0, Ith limits are (-infinity, UPPER(I)];
        if INFIN(I) = 1, Ith limits are [LOWER(I), infinity);
        if INFIN(I) = 2, Ith limits are [LOWER(I), UPPER(I)].

CORREL DOUBLE PRECISION, array of correlation coefficients;
       the correlation coefficient in row I column J of the
       correlation matrix should be stored in
          CORREL( J + ((I-2)*(I-1))/2 ), for J < I.
       The correlation matrix must be positive semi-definite.

DELTA  DOUBLE PRECISION, array of non-centrality parameters.

MAXPTS INTEGER, maximum number of function values allowed. This
       parameter can be used to limit the time. A sensible
       strategy is to start with MAXPTS = 1000*N, and then
       increase MAXPTS if ERROR is too large.

ABSEPS DOUBLE PRECISION absolute error tolerance.

RELEPS DOUBLE PRECISION relative error tolerance.

error  DOUBLE PRECISION estimated absolute error,
       with 99\% confidence level.

value  DOUBLE PRECISION estimated value for the integral

inform INTEGER, termination status parameter:
       if INFORM = 0, normal completion with ERROR < EPS;
       if INFORM = 1, completion with ERROR > EPS and MAXPTS
                      function values used; increase MAXPTS to
                      decrease ERROR;
       if INFORM = 2, N > 1000 or N < 1.
       if INFORM = 3, correlation matrix not positive semi-definite.

RND    ignore; this initializes RNG
}
}
\description{
Computes the the distribution function of the multivariate t
distribution for arbitrary limits, degrees of freedom and
correlation matrices.
This function is unlike \code{mvtnorm::pmvt} in two ways:
\enumerate{
\item The QRVSN method is used for every dimension \code{n} (including bivariate and trivariate),
\item The QRVSN method on exponential variates, not chi/sqrt(nu).
}
}
\examples{
mvgb::pmvlaplace(x=NULL,
                n=5,
                lower=rep(-1,5),
                upper=rep(1,5),
                infin=rep(2,5),
                corr=structure(c(1, 0.85, 0.85, 0.85, 0.85,
                                 0, 1   , 0.85, 0.85, 0.85,
                                 0, 0   , 1   , 0.85, 0.85,
                                 0, 0   , 0   , 1   , 0.85,
                                 0, 0   , 0   , 0   , 1   ),
                               .Dim = c(5L,5L)),
                corrF=NULL,
                delta=rep(0,5))[c("value","inform","error")]

#####################################################################
## compare with Monte Carlo approach using rmvl from LaplacesDemon ##
#####################################################################
# n <- 5.0e7
# ns <- n * 0.5792
# nf <- n - ns
# ns/n + 1.96*c(-1,1)/(n*sqrt(n)) * sqrt(ns*nf)
# diff(ns/n + 1.96*c(-1,1)/(n*sqrt(n)) * sqrt(ns*nf))
# diff(ns/n + 1.96*c(-1,1)/(n*sqrt(n)) * sqrt(ns*nf))/2
#
# rmv <-
# LaplacesDemon::rmvl(n,
#                     mu=rep(0,5),
#                     Sigma=structure(c(1, 0.85, 0.85, 0.85, 0.85,
#                                       0.85, 1   , 0.85, 0.85, 0.85,
#                                       0.85, 0.85   , 1   , 0.85, 0.85,
#                                       0.85, 0.85   , 0.85   , 1   , 0.85,
#                                       0.85, 0.85   , 0.85   , 0.85   , 1   ),
#                                     .Dim = c(5L,5L)))
#
# mc.result <- sum(rowSums(rmv >= rep(-1,5) & rmv <= rep(1,5)) == 5)/n
# mc.result
## > mc.result
## [1] 0.5792252


#####################################################################
## compare with integrating the density from LaplacesDemon         ##
#####################################################################
# integrate_density <-
#   cubature::hcubature(LaplacesDemon::dmvl,
#                       lower=rep(-1,5),
#                       upper=rep(1,5),
#                       mu=rep(0,5),
#                       Sigma=structure(c(1, 0.85, 0.85, 0.85, 0.85,
#                                         0.85, 1   , 0.85, 0.85, 0.85,
#                                         0.85, 0.85   , 1   , 0.85, 0.85,
#                                         0.85, 0.85   , 0.85   , 1   , 0.85,
#                                         0.85, 0.85   , 0.85   , 0.85   , 1   ),
#                                       .Dim = c(5L,5L)))
# integrate_density
## > integrate_density
## $integral
## [1] -Inf
#
## Even splitting around 0 does not help; then double.
# integrate_density_part1 <-
#   cubature::hcubature(LaplacesDemon::dmvl,
#                       lower=rep(-1,5),
#                       upper=rep(0,5),
#                       mu=rep(0,5),
#                       Sigma=structure(c(1, 0.85, 0.85, 0.85, 0.85,
#                                         0.85, 1   , 0.85, 0.85, 0.85,
#                                         0.85, 0.85   , 1   , 0.85, 0.85,
#                                         0.85, 0.85   , 0.85   , 1   , 0.85,
#                                         0.85, 0.85   , 0.85   , 0.85   , 1   ),
#                                       .Dim = c(5L,5L)))
# 2*integrate_density_part1$integral
## > integrate_density_part1
## $integral
## [1] 0.07738318
##
## $error
## [1] 7.738278e-07
##
## $functionEvaluations
## [1] 12793731
##
## $returnCode
## [1] 0
##
## > 2*integrate_density_part1$integral
## [1] 0.1547664
}
\references{
Genz, A. and Bretz, F. (2002), Methods for the computation of multivariate
t-probabilities. \emph{Journal of Computational and Graphical Statistics},
\bold{11}, 950--971. \url{DOI:10.1198/106186002394}

\url{http://www.math.wsu.edu/faculty/genz/homepage}

\url{http://www.math.wsu.edu/faculty/genz/software/fort77/mvtdstpack.f}
}
\keyword{distribution}
